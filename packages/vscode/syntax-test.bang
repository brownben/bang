// This file is to test syntax highlighting, and is not valid bang so cannot be run

import maths
from file import { createDictionary }

// Single Line Comment


'A String'
"Another String"
`A Multiline
  string`
"what up".toUppercase(77)

125
12.56
0.23
1_000_000
10_000_000.45
12. // shouldn't include .

1 + 2
5 - 2
4 / 2
2 * 3
2 ** 2


[1, 2, 3]
["hello", 33, 'what up']
[1, 2, ...[4, 5]]
[1, 2, 3].map((value) => -value)

let a = 7
const b = 22

5 > 4
5 >= 5
5 == 5
4 != 2
4 <= 5
2 < 3

{ a: 3, b: 4 }
{ 'a': 3, b }
{ 'a': 3, b: 4, ...{ c:5 } }

let { a: d, b } = { a: 3, b: 4 }
const b = 77
!false
true && false
true || false
true and false
true or false
null

while (x)
  doSomething()

if (x) doSomthing()
else doSomethingElse()

if (x)
  doSomthing()
else
  doSomethingElse()


let go = (param, other) => param + other

let do = (a, b,) =>
  return (a * b) + 37

let aLongFunction = (
  param1,
  param2,
) => doSomethingElse()

let aLongFunction = (
  param1,
  param2,
) =>
  if (param1)
    a()
  else
    return param2

let do = ({ a, b }) =>
  return (a * b) + 37

a += 1  // a = a + 1
b -= 2  // b = b - 2
c *= 4  // c = c * 4
d /= 22 // d = d / 22


let a = 7
a += 2

it('should multiply numbers', () =>
  expectOutput(`1 * 2`).toEqual(2)
  expectOutput('7 * 3').toEqual(21)
  expectOutput('2000 * 20').toEqual(40000)
)

const aFunction = () =>
  `A Comment Explaining the Function`
  doSomething()
  andSomethingElse()

